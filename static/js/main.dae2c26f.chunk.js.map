{"version":3,"sources":["components/search-box/searchBox.js","components/card/card.component.jsx","components/cardlist/cardList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","props","className","type","placeholder","onChange","onSearchChange","Card","alt","src","monster","id","name","email","CardList","this","monsters","map","Component","App","event","setState","searchField","target","value","state","fetch","then","response","json","catch","error","console","log","filterData","filter","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEe,SAASA,EAAUC,GAC7B,OACK,uBACKC,UAAU,aACVC,KAAK,SACLC,YAAY,kBACZC,SAAUJ,EAAMK,iB,UCLlBC,EAAK,SAACN,GACd,OACK,sBAAKC,UAAU,iBAAf,UACK,qBACAM,IAAI,UACJC,IAAG,+BAA0BR,EAAMS,QAAQC,GAAxC,4BAEH,6BAAKV,EAAMS,QAAQE,OACnB,4BAAIX,EAAMS,QAAQG,YCHpBC,G,MAAb,kDACK,WAAYb,GAAQ,uCACTA,GAFhB,0CAQK,WACK,OACK,qBAAKC,UAAU,YAAf,SACMa,KAAKd,MAAMe,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,aAZ9D,GAA8BO,cCHTC,G,wDACnB,aAAe,IAAD,8BACZ,gBAaFb,eAAiB,SAACc,GAChB,EAAKC,SAAS,CACZC,YAAaF,EAAMG,OAAOC,SAd5B,EAAKC,MAAQ,CACXT,SAAU,GACVM,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKR,SAAS,CAAEL,SAAUa,OACvCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,oBAQhC,WACE,MAAkChB,KAAKU,MAA/BT,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,YACdY,EAAWlB,EAASmB,QAAO,SAAAzB,GAAO,OAAEA,EAAQE,KAAKwB,SAASd,MAE9D,OADAU,QAAQC,IAAI,WAAYX,GAEtB,sBAAKpB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWI,eAAgBS,KAAKT,iBAChC,cAAC,EAAD,CAAUU,SAAUkB,W,GA5BKhB,cCOlBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dae2c26f.chunk.js","sourcesContent":["import React from 'react'\nimport './search-box.component.css'\nexport default function SearchBox(props) {\n     return (\n          <input\n               className='search-box'\n               type='search'\n               placeholder='search Monsters'\n               onChange={props.onSearchChange}\n\n          />\n     )\n}\n","import React from 'react'\nimport './card.component.css'\n\nexport const Card=(props)=> {\n     return (\n          <div className='card-container'>\n               <img\n               alt='mosnter'\n               src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n               />\n               <h2>{props.monster.name}</h2>\n               <p>{props.monster.email}</p>\n          </div>\n     )\n}\n","\n\nimport { Card } from '../card/card.component'\n\nimport './card-list.component.css'\n\nimport React, { Component } from 'react'\n\nexport class CardList extends Component {\n     constructor(props) {\n          super(props);\n     }\n\n\n\n     \n     render() {\n          return (\n               <div className=\"card-list\">\n                    {this.props.monsters.map(monster =>\n                         <Card monster={monster} key={monster.id} />\n                    )}\n               </div>\n          )\n     }\n}\n","import React, { Component } from 'react'\nimport Searchbox from './components/search-box/searchBox';\nimport { CardList } from './components/cardlist/cardList';\nimport './App.css'\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(json => this.setState({ monsters: json }))\n      .catch(error => console.log(error))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({\n      searchField: event.target.value\n    })\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    let filterData=monsters.filter(monster=>monster.name.includes(searchField))\n    console.log(\"busqueda\", searchField )\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <Searchbox onSearchChange={this.onSearchChange} />\n        <CardList monsters={filterData}></CardList>\n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}